#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
.blacklist [
    "kitty"
    "terminal"
    "emacs"
    "vmware fusion"
]

# change windows focus (select active window)
# no emacs counterpart
shift + alt - h : yabai -m window --focus west
shift + alt - j : yabai -m window --focus south
shift + alt - k : yabai -m window --focus north
shift + alt - l : yabai -m window --focus east

# swap windows (move windows around)
# emacs with wm-swap-<direction>
# emacs counterpart C-c [hjkl]
ctrl + alt - h : yabai -m window --swap west
ctrl + alt - j : yabai -m window --swap south
ctrl + alt - k : yabai -m window --swap north
ctrl + alt - l : yabai -m window --swap east

# send active window to a desktop space
shift + ctrl - z: yabai -m window --space prev
shift + ctrl - x: yabai -m window --space next
shift + ctrl - 1: yabai -m window --space 1
shift + ctrl - 2: yabai -m window --space 2
shift + ctrl - 3: yabai -m window --space 3
shift + ctrl - 4: yabai -m window --space 4
shift + ctrl - 5: yabai -m window --space 5
shift + ctrl - 6: yabai -m window --space 6
shift + ctrl - 7: yabai -m window --space 7

# zoom active window
# from emacs with wm-zoom-screen and wm-zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen
alt - p : yabai -m window --toggle zoom-parent

# toogle window configuration (horizontal vs. vertical
# from emacs with wm-toogle-split and wm-toggle-float
ctrl - s : yabai -m window --toggle split
ctrl - f : yabai -m window --toggle float

# balance split partitions
# from emacs with wm-balance
ctrl + alt - b : yabai -m space --balance

# rotate windows 90 degrees
# from emacs with wm-rotate
ctrl + alt - r : yabai -m space --rotate 90

# mirror windows
# from emacs with wm-mirror
ctrl - x : yabai -m space --mirror x-axis
ctrl - y : yabai -m space --mirror y-axis

## future tool control

### screen capture

# fullscreen screenshot to Desktop
# manual crop screenshot to Desktop
# manual crop screenshot to clipboard
# screen recording fullscreen
# volume control (10% steps)